package com.llg.privateproject.actvity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Intent;
import android.media.Image;
import android.os.Bundle;
import android.view.Gravity;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Toast;

import com.bjg.lcc.privateproject.R;
import com.google.gson.Gson;
import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;
import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.llg.help.MyFormat;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.adapters.ConsumeAdapter;
import com.llg.privateproject.entities.Consumeentity;
import com.llg.privateproject.entities.UserInformation;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.smartandroid.sa.aysnc.Log;
import com.smartandroid.sa.view.AutoLoading;
import com.tencent.android.tpush.XGPushClickedResult;
import com.tencent.android.tpush.XGPushManager;

/**
 * 现场消费点单
 * yh
 * 2015.12.19
 * */
public class Consume extends BaseActivity{
	/**订单号*/
	private String id;
	@ViewInject(R.id.lv)private PullToRefreshListView lv;
	@ViewInject(R.id.turn)private ImageView turn;
	private ConsumeAdapter adapter;
	List<Consumeentity>list;
	private int pageNo=1;
	private int totalPages=4;
	private AutoLoading autoLoading;
private 	Toast toast;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.consume);
		ViewUtils.inject(this);
		comehere();
		init();
		
	}
	private void init(){
		turn.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				finish();
			}
		});
		list=new ArrayList<Consumeentity>();
		adapter=new ConsumeAdapter(list, this);
		lv.setAdapter(adapter);
		lv.setOnRefreshListener(new OnRefreshListener<ListView>() {

			@Override
			public void onRefresh(PullToRefreshBase<ListView> refreshView) {
				// TODO Auto-generated method stub
				pageNo++;
				if(totalPages<pageNo){
					toast("暂无更多");
					lv.onRefreshComplete();
					return;
				}
				if(appContext.isNetworkConnected()){
				getdata1();
				adapter.notifyDataSetChanged();}else{
					toast(R.string.t_Connection);
				}
				
			}
		});

		if(appContext.isNetworkConnected()){
			getdata1();
			adapter.notifyDataSetChanged();}else{
				toast(R.string.t_Connection);
			}
	}
	private void getdata1(){
		RequestParams params=new RequestParams();
		params.addQueryStringParameter("access_token", UserInformation.getAccess_token());
		params.addQueryStringParameter("pageNo", String.valueOf(pageNo));
		AppContext.getHtmlUitls().xUtilsm(this, HttpMethod.POST, "m/spotOrder/getShopSpotList", params, new HttpCallback() {
			
			@Override
			public void onError(String msg) {
				// TODO Auto-generated method stub
				if(msg.equals(401)){
					toast("未登录");
					startActivity(new Intent(Consume.this,WebLoginActivity.class));
				}
			}
			
			@Override
			public void onBack(JSONObject json) {
	
				try {
					if(json.getBoolean("success")){
						if(json.get("obj")!=null){
							JSONObject obj=json.getJSONObject("obj");
							totalPages=obj.getInt("totalPages");
							if(obj.get("result")!=null&&obj.getJSONArray("result").length()>0){
								JSONArray result=obj.getJSONArray("result");
								Gson gson=new Gson();
								Consumeentity item;
								for (int i = 0; i < result.length(); i++) {
									 item=	gson.fromJson(result.getJSONObject(i).toString(), Consumeentity.class);
								list.add(item);
								}
								adapter.notifyDataSetChanged();
							}else if(obj.get("result")!=null&&obj.getJSONArray("result").length()<=0&&pageNo==1){
							
								toast=null;
								
								toast=Toast.makeText(getApplicationContext(), "暂无数据", Toast.LENGTH_LONG);
								 LinearLayout ll=(LinearLayout) toast.getView() ;
								 ImageView iv=new ImageView(Consume.this);
								 iv.setImageResource(R.drawable.searh_meiyoujilu);
								 iv.setBackgroundResource(R.color.transparent);
								 ll.addView(iv,0);
								 toast.setGravity(Gravity.CENTER, 0, 0);
								toast.show();
							}
							
						}
					}else if(json.get(MyFormat.errorCode)!=null&&json.getString(MyFormat.errorCode).equals(MyFormat.NOT_LOGIN)){
						setRefreshListtener(new Refresh() {
							
							@Override
							public void refreshRequst(String access_token) {
								// TODO Auto-generated method stub
								getdata1();
							}
						});
						RefeshToken();
					}
					lv.onRefreshComplete();
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}
	
	private void comehere() {
		XGPushClickedResult click = XGPushManager.onActivityStarted(this);
		if (click != null) {
			JSONObject obj;
			try {
				obj = new JSONObject(click.getCustomContent());
				if(obj.has("objectId")&&obj.get("objectId")!=null){
					
					id=obj.get("objectId").toString();
				}else{finish();}
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}
		
	}
}
