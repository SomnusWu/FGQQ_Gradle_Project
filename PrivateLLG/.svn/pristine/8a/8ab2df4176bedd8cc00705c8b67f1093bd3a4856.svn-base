package com.llg.privateproject.actvity;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnChildClick;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.privateproject.AppContext;
import com.bjg.lcc.privateproject.R;
import com.llg.privateproject.adapters.MaybeYouLikerAdapter;
import com.llg.privateproject.adapters.OrderStatusAdapter;
import com.llg.privateproject.adapters.OrderStatusAdapter.Callback;
import com.llg.privateproject.adapters.UnPaidOrderStautsAdapter;
import com.llg.privateproject.adapters.UnPaidOrderStautsAdapter.UnPaidorderCallback;
import com.llg.privateproject.entities.MaybeYouLike;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.llg.privateproject.view.MyGridView;
import com.llg.privateproject.view.OrderStatusDialog;
import com.llg.privateproject.view.OrderStatusDialog.PicListener;
import com.readystatesoftware.viewbadger.BadgeView;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.ContentResolver;
import android.content.Intent;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.Toast;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;

public class OrderStatusActivity extends BaseActivity implements PicListener,
		Callback, OnItemClickListener,UnPaidorderCallback {
	/** 标题 */
	@ViewInject(R.id.head_tilte)
	private TextView head_tilte;
	/** 更多 */
	@ViewInject(R.id.more)
	private ImageView more;
	/** 选中状态 */
	Drawable top1 = null;
	Drawable top2 = null;
	Drawable top3 = null;
	Drawable top4 = null;
	/** 评价对话框 */
	static public OrderStatusDialog dialog1;
	/** 图片布局 */
	static LinearLayout ll_pic = null;
	/***/
	ImageView chuantupian;
	/** 待付款 */
	@ViewInject(R.id.title_tv)
	private TextView title_tv;
	/** 待收货 */
	@ViewInject(R.id.title_tv1)
	private TextView title_tv1;
	/** 待评价 */
	@ViewInject(R.id.title_tv2)
	private TextView title_tv2;
	/** 全部订单 */
	@ViewInject(R.id.title_tv3)
	private TextView title_tv3;
	/** 指示剂 */
	@ViewInject(R.id.indicator)
	private RelativeLayout indicator;
	private int position = 0;
	/** 未支付订单状态listView */
	@ViewInject(R.id.lv_order_status)
	private ListView lv_order_status;
	/** 待收货listView */
	@ViewInject(R.id.lv2)
	private PullToRefreshListView lv2;
	/** 待评价listView */
	@ViewInject(R.id.lv3)
	private PullToRefreshListView lv3;
	/** 全部订单listView */
	@ViewInject(R.id.lv4)
	private PullToRefreshListView lv4;
	/** 没有商品时显示LinearLayout */
	@ViewInject(R.id.ll_noproduct)
	private LinearLayout ll_noproduct;
	/** 去逛逛按钮 */
	@ViewInject(R.id.quguangguang)
	private TextView quguangguang;
	/** 待付款列表 */
	private List<Map<String, Object>> list1;
	/** 待收货列表 */
	private List<Map<String, Object>> list2;
	/** 待评价列表 */
	private List<Map<String, Object>> list3;
	/** 全部订单列表 */
	private List<Map<String, Object>> list4;
	private UnPaidOrderStautsAdapter orderStatusadapter1;
	private OrderStatusAdapter orderStatusadapter2;
	private OrderStatusAdapter orderStatusadapter3;
	private OrderStatusAdapter orderStatusadapter4;

	/** 猜你喜欢列表 */
	@ViewInject(R.id.mayby_youlike_lv)
	private MyGridView mayby_youlike_lv;
	/** 猜你喜欢列表 */
	private List<Map<String, Object>> list_cainixihuan;
	/** 猜你喜欢列表适配器 */
	private MaybeYouLikerAdapter youLikeAdapter;
	Intent intent;
	BadgeView badge1;
	BadgeView badge2;
	BadgeView badge3;
	BadgeView badge4;

	/** sd卡路径 */
	String path = null;
	Uri imageUri;
	int count = 0;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.setting_order_status);
		ViewUtils.inject(this);
		init();

	}

	/***/
	private void init() {
		more.setVisibility(View.VISIBLE);

		intent = getIntent();
		position = intent.getBundleExtra("bundle").getInt("position");
		head_tilte.setText("我的订单");
		list1 = new ArrayList<Map<String, Object>>();
		list2 = new ArrayList<Map<String, Object>>();
		list3 = new ArrayList<Map<String, Object>>();
		list4 = new ArrayList<Map<String, Object>>();
		orderStatusadapter1 = new UnPaidOrderStautsAdapter(this, list1, this);
		orderStatusadapter2 = new OrderStatusAdapter(this, list2, this);
		orderStatusadapter3 = new OrderStatusAdapter(this, list3, this);
		orderStatusadapter4 = new OrderStatusAdapter(this, list4, this);
		lv_order_status.setAdapter(orderStatusadapter1);
		lv2.setAdapter(orderStatusadapter2);
		lv3.setAdapter(orderStatusadapter3);
		lv4.setAdapter(orderStatusadapter4);
		setBadgeView();
		orderstatus(1,1);
//		testOrderstatus();

		mayby_youlike_lv.setOnItemClickListener(this);

		list_cainixihuan = new ArrayList<Map<String, Object>>();// 猜你喜欢
		youLikeAdapter = new MaybeYouLikerAdapter(this, list_cainixihuan, false);
		mayby_youlike_lv.setAdapter(youLikeAdapter);
		setIndicator(position, 4, indicator);

	}

	/** 设置提示 */
	private void setBadgeView() {

		badge1 = new BadgeView(this, title_tv);
		badge2 = new BadgeView(this, title_tv1);
		badge3 = new BadgeView(this, title_tv2);
		badge4 = new BadgeView(this, title_tv3);
		// badge1.setBadgeMargin(10, 0);
		badge1.setBadgeMargin(1);
		badge1.setText("1");
		badge1.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
		badge1.setTextSize(10);
		// badge1.show();

		badge2.setBadgeMargin(1);
		badge2.setText("1");
		badge2.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
		badge2.setTextSize(10);
		// badge2.setBackgroundResource(R.color.green1);
		// badge2.show();

		badge3.setBadgeMargin(1);
		badge3.setText("1");
		badge3.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
		badge3.setTextSize(10);
		// badge3.show();

		badge4.setBadgeMargin(1);
		badge4.setText("1");
		badge4.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
		badge4.setTextSize(10);
		// badge4.show();
	}

	/** 未付款订单
	 * 处理不停状态订单  1未付款，2已付款，3等待收货，4交易完成,6交易取消,7已删除    参数 orderState==订单状态  pageNo==当前页码   备注  未付款的订单 无分页
	 * @param orderState 订单状态   : */
	private void orderstatus(int orderState, int pageNo) {
		RequestParams params = new RequestParams();
		
		params.addBodyParameter("access_token", AppContext.getUserInformation().getAccess_token());
		params.addBodyParameter("orderState", String.valueOf(orderState));
//		params.addBodyParameter("pageNo", String.valueOf(pageNo));
		AppContext.getHtmlUitls().xUtilsm(this, HttpMethod.POST,
				"m/order/orderList", params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
						myLogShow("my", "******"+msg);
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						try {
							if (json.getBoolean("success")) {
								JSONObject object = json
										.getJSONObject("attributes");
								JSONArray array = new JSONArray();
								array = object.getJSONArray("orderBasePojos");
					
								if (array.length() > 0) {
									myLogShow("my", "aray.length:"+array
											.length());
									for (int i = 0; i < array.length(); i++) {
										JSONObject object2 = array
												.getJSONObject(i);
										myLogShow("my", "object2:"+array
												.getJSONObject(i));
										JSONArray array2 = new JSONArray();
										array2 = object2
												.getJSONArray("objects");
										myLogShow("my", "array2.length():"+array2
												.length());
										if (array2.length() > 0) {

											Map<String, Object> map;// 订单
											for (int j = 0; j < array2.length(); j++) {
												JSONArray array3 = new JSONArray();
												array3=array2.getJSONArray(j);
												
												if (array3.length() > 0) {
//													for (int k = 0; k < array3.length(); k++) {

														map = new HashMap<String, Object>();
													map.put("orderPayId", array3.getString(0));
													map.put("orderPayCode", array3.getString(1));
													map.put("createDate", array3.getString(2));
													map.put("price", array3.getString(3));
													map.put("detailId", array3.getString(4));
													map.put("count", array3.getString(5));
													map.put("dsc", array3.getString(10));
													map.put("img", array3.getString(12));
													map.put("orderStatus", "未支付");
													myLogShow("my","orderpayid"+ map.get("orderPayId").toString());
													list1.add(map);
													
//													}
												if(list1.size()>1){
													myLogShow("my", "list1.count:"+list1.get(0).get("count"));
												}
													orderStatusadapter1.notifyDataSetChanged();
												}
											}

										}
									}
								}
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				});
	}


	@OnClick({ R.id.turn, R.id.more, R.id.title_tv, R.id.title_tv1,
			R.id.title_tv2, R.id.title_tv3, R.id.quguangguang })
	public void myclick(View v) {
		switch (v.getId()) {
		case R.id.turn:// 返回
			finish();
			break;
		case R.id.more:// 更多
			Toast.makeText(this, "more", Toast.LENGTH_SHORT).show();
			break;
		case R.id.title_tv:// 待付款
			position = 0;
			break;
		case R.id.title_tv1:// 待收货
			position = 1;

			break;
		case R.id.title_tv2:// 待评价
			position = 2;
			break;
		case R.id.title_tv3:// 全部订单
			position = 3;
			break;
		case R.id.quguangguang:// 去逛逛
			Toast.makeText(this, "去逛逛", Toast.LENGTH_SHORT).show();
			break;

		default:
			break;
		}
		setIndicator(position, 4, indicator);
	}

	/** 设置指示剂位置 */
	private void setIndicator(int position, int wid, View v) {
		LayoutParams lp = (LayoutParams) v.getLayoutParams();
		int width = AppContext.getScreenWidth() / wid;
		lp.width = width;
		lp.leftMargin = position * width;
		v.setLayoutParams(lp);
		switch (position) {
		case 0:
			ll_noproduct.setVisibility(View.GONE);
			lv_order_status.setVisibility(View.VISIBLE);
			badge1.hide();

			top1 = getResources().getDrawable(
					R.drawable.wdedingdan_daifukuan_orange);
			top1.setBounds(0, 0, top1.getMinimumWidth(),
					top1.getMinimumHeight());
			title_tv.setCompoundDrawables(null, top1, null, null);
			title_tv.setTextColor(getResources().getColor(R.color.orange1));

			top2 = getResources().getDrawable(
					R.drawable.wdedingdan_daishouhuo_gray);
			top2.setBounds(0, 0, top2.getMinimumWidth(),
					top2.getMinimumHeight());
			title_tv1.setCompoundDrawables(null, top2, null, null);
			title_tv1.setTextColor(getResources().getColor(R.color.black2));

			top3 = getResources().getDrawable(
					R.drawable.wdedingdan_daipingjia_gray);
			top3.setBounds(0, 0, top3.getMinimumWidth(),
					top3.getMinimumHeight());
			title_tv2.setCompoundDrawables(null, top3, null, null);
			title_tv2.setTextColor(getResources().getColor(R.color.black2));

			top4 = getResources().getDrawable(
					R.drawable.wdedingdan_wodedingdan_gray);
			top4.setBounds(0, 0, top4.getMinimumWidth(),
					top4.getMinimumHeight());
			title_tv3.setCompoundDrawables(null, top4, null, null);
			title_tv3.setTextColor(getResources().getColor(R.color.black2));

			break;
		case 1:

			ll_noproduct.setVisibility(View.VISIBLE);
			lv_order_status.setVisibility(View.GONE);
			
			youLikeAdapter.notifyDataSetChanged();
			badge2.hide();

			top1 = getResources().getDrawable(
					R.drawable.wdedingdan_daifukuan_gray);
			top1.setBounds(0, 0, top1.getMinimumWidth(),
					top1.getMinimumHeight());
			title_tv.setCompoundDrawables(null, top1, null, null);
			title_tv.setTextColor(getResources().getColor(R.color.black2));

			top2 = getResources().getDrawable(
					R.drawable.wdedingdan_daishouhuo_orange);
			top2.setBounds(0, 0, top2.getMinimumWidth(),
					top2.getMinimumHeight());
			title_tv1.setCompoundDrawables(null, top2, null, null);
			title_tv1.setTextColor(getResources().getColor(R.color.orange1));

			top3 = getResources().getDrawable(
					R.drawable.wdedingdan_daipingjia_gray);
			top3.setBounds(0, 0, top3.getMinimumWidth(),
					top3.getMinimumHeight());
			title_tv2.setCompoundDrawables(null, top3, null, null);
			title_tv2.setTextColor(getResources().getColor(R.color.black2));

			top4 = getResources().getDrawable(
					R.drawable.wdedingdan_wodedingdan_gray);
			top4.setBounds(0, 0, top4.getMinimumWidth(),
					top4.getMinimumHeight());
			title_tv3.setCompoundDrawables(null, top4, null, null);
			title_tv3.setTextColor(getResources().getColor(R.color.black2));
			break;
		case 2:
			ll_noproduct.setVisibility(View.GONE);
			lv_order_status.setVisibility(View.VISIBLE);
			badge3.hide();
			top1 = getResources().getDrawable(
					R.drawable.wdedingdan_daifukuan_gray);
			top1.setBounds(0, 0, top1.getMinimumWidth(),
					top1.getMinimumHeight());
			title_tv.setCompoundDrawables(null, top1, null, null);
			title_tv.setTextColor(getResources().getColor(R.color.black2));

			top2 = getResources().getDrawable(
					R.drawable.wdedingdan_daishouhuo_gray);
			top2.setBounds(0, 0, top2.getMinimumWidth(),
					top2.getMinimumHeight());
			title_tv1.setCompoundDrawables(null, top2, null, null);
			title_tv1.setTextColor(getResources().getColor(R.color.black2));

			top3 = getResources().getDrawable(
					R.drawable.wdedingdan_daipingjia_orange);
			top3.setBounds(0, 0, top3.getMinimumWidth(),
					top3.getMinimumHeight());
			title_tv2.setCompoundDrawables(null, top3, null, null);
			title_tv2.setTextColor(getResources().getColor(R.color.orange1));

			top4 = getResources().getDrawable(
					R.drawable.wdedingdan_wodedingdan_gray);
			top4.setBounds(0, 0, top4.getMinimumWidth(),
					top4.getMinimumHeight());
			title_tv3.setCompoundDrawables(null, top4, null, null);
			title_tv3.setTextColor(getResources().getColor(R.color.black2));
			break;
		case 3:
			ll_noproduct.setVisibility(View.GONE);
			lv_order_status.setVisibility(View.VISIBLE);
			badge4.hide();

			top1 = getResources().getDrawable(
					R.drawable.wdedingdan_daifukuan_gray);
			top1.setBounds(0, 0, top1.getMinimumWidth(),
					top1.getMinimumHeight());
			title_tv.setCompoundDrawables(null, top1, null, null);
			title_tv.setTextColor(getResources().getColor(R.color.black2));

			top2 = getResources().getDrawable(
					R.drawable.wdedingdan_daishouhuo_gray);
			top2.setBounds(0, 0, top2.getMinimumWidth(),
					top2.getMinimumHeight());
			title_tv1.setCompoundDrawables(null, top2, null, null);
			title_tv1.setTextColor(getResources().getColor(R.color.black2));

			top3 = getResources().getDrawable(
					R.drawable.wdedingdan_daipingjia_gray);
			top3.setBounds(0, 0, top3.getMinimumWidth(),
					top3.getMinimumHeight());
			title_tv2.setCompoundDrawables(null, top3, null, null);
			title_tv2.setTextColor(getResources().getColor(R.color.black2));

			top4 = getResources().getDrawable(
					R.drawable.wdedingdan_wodedingdan_orange);
			top4.setBounds(0, 0, top4.getMinimumWidth(),
					top4.getMinimumHeight());
			title_tv3.setCompoundDrawables(null, top4, null, null);
			title_tv3.setTextColor(getResources().getColor(R.color.orange1));
			break;

		default:
			break;
		}

	}

	@Override
	public void setDialog(OrderStatusDialog dialog1, LinearLayout ll_pic,
			ImageView chuantupian) {
		// TODO Auto-generated method stub

		this.dialog1 = dialog1;
		this.ll_pic = ll_pic;
		this.chuantupian = chuantupian;

	}

	@Override
	public void setPictrue(int type) {
		// TODO Auto-generated method stub
		// if(this.ll_pic==null)
		// this.ll_pic=ll_pic;
		// Log.d("my", "type"+type+"ll_pic"+ll_pic);
		Intent intent = new Intent();
		if (type == 1) {// 本地上传
			intent.setType("image/*");
			// 启用相册
			intent.setAction(Intent.ACTION_GET_CONTENT);
			startActivityForResult(intent, 1);
		} else if (type == 2) {// 拍照上传
			if (hasSDcard()) {
				File file = new File(Environment.getExternalStorageDirectory(),
						"/head.jpg");
				imageUri = Uri.fromFile(file);
				// Log.i("my","r.id.paizhao"+ imageUri.toString());
			}
			// 拍照
			intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);
			intent.putExtra("return-data", false);
			intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
			intent.putExtra("outputFormat",
					Bitmap.CompressFormat.JPEG.toString());
			intent.putExtra("noFaceDetection", true);

			startActivityForResult(intent, 2);
		}

	}

	/** 判断是否有sd卡 */
	boolean hasSDcard() {

		String state = Environment.getExternalStorageState();
		if (state.equals(Environment.MEDIA_MOUNTED)) {
			path = Environment.getExternalStorageDirectory().toString();
			return true;
		}
		Toast.makeText(this, "false", Toast.LENGTH_LONG).show();
		return false;
	}

	@SuppressLint("NewApi")
	@SuppressWarnings("deprecation")
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		// Log.i("my", "requestCode"+requestCode);
		// Log.i("my", "ll_pic"+ll_pic);
		Log.i("my", "dialog1" + dialog1);
		count++;
		Log.i("my", "count:" + count);
		if (count > 2) {
			chuantupian.setVisibility(View.INVISIBLE);
			Toast.makeText(this, "只能传两张图片", Toast.LENGTH_SHORT).show();
		}
		if (resultCode == RESULT_OK && count < 3) {

			ContentResolver cr = getContentResolver();
			switch (requestCode) {
			case 1:
				Uri uri = data.getData();
				try {
					// Bitmap
					// bitmap=BitmapFactory.decodeStream(cr.openInputStream(uri));
					Drawable dawble = Drawable.createFromResourceStream(null,
							null, cr.openInputStream(uri), null);

					ImageView iv = new ImageView(this);

					LayoutParams lp = new LayoutParams(
							AppContext.getScreenWidth() * 2 / 5,
							AppContext.getScreenWidth() * 4 / 5);
					// iv.setLayoutParams(lp);
					lp.rightMargin = 10;
					iv.setLayoutParams(lp);
					iv.setBackgroundDrawable(dawble);
					// iv.setImageBitmap(bitmap);
					if (ll_pic != null)
						ll_pic.addView(iv);
					// bitmap.recycle();
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					Log.e("Exception", e.getMessage(), e);
				}

				break;
			case 2:
				try {
					File file = new File(
							Environment.getExternalStorageDirectory(),
							"/head.jpg");
					imageUri = Uri.fromFile(file);
					// Log.i("my", "2"+imageUri.toString());
					// Bitmap
					// bitmap=BitmapFactory.decodeStream(cr.openInputStream(imageUri));
					Drawable dawble = Drawable.createFromResourceStream(null,
							null, cr.openInputStream(imageUri), null);
					ImageView iv = new ImageView(this);

					LayoutParams lp = new LayoutParams(
							AppContext.getScreenWidth() * 2 / 5,
							AppContext.getScreenWidth() * 4 / 5);
					// iv.setLayoutParams(lp);
					lp.rightMargin = 10;
					iv.setBackgroundDrawable(dawble);
					iv.setLayoutParams(lp);

					// iv.setImageBitmap(bitmap);
					if (ll_pic != null)
						ll_pic.addView(iv);
					// bitmap.recycle();
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					Log.e("Exception", e.getMessage(), e);
				}

				break;

			default:
				break;
			}
			// Log.e("my", "uri:"+uri.toString());
		} else {
			Toast.makeText(this, "取消", Toast.LENGTH_SHORT).show();
		}
		super.onActivityResult(requestCode, resultCode, data);
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		// TODO Auto-generated method stub
		super.onConfigurationChanged(newConfig);
	}

	@Override
	protected void onSaveInstanceState(Bundle outState) {
		// TODO Auto-generated method stub

		super.onSaveInstanceState(outState);

	}

	@Override
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onRestoreInstanceState(savedInstanceState);
		// ll_pic=(LinearLayout) savedInstanceState.get("ll_pic");
	}

	@Override
	protected void onStop() {
		// TODO Auto-generated method stub
		super.onStop();
		Log.d("my", "onStop");
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		Log.d("my", "onDestroy");
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		// TODO Auto-generated method stub
		Toast.makeText(this, "item" + position, Toast.LENGTH_SHORT).show();

	}

}
