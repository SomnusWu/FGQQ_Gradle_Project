package com.llg.privateproject.actvity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.bjg.lcc.jsonparser.ParseJson;
import com.bjg.lcc.privateproject.R;
import com.finddreams.sortedcontact.CityListActivity;
import com.lidroid.xutils.BitmapUtils;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.help.GetProgressBar;
import com.llg.help.MyFormat;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.adapters.DeliveryAdapter;
import com.llg.privateproject.adapters.NewHomeViewPagerAdapter;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.llg.privateproject.utils.ActivitiesManager;
import com.llg.privateproject.utils.CommonUtils;
import com.llg.privateproject.view.IndictorView;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.drawable.AnimationDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.Log;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.TextView;
import android.widget.Toast;

/**
 * 新版首页 yh 2015.9.15
 * */
public class NewHomeActivity extends BaseActivity {
	/** 初始化时间 */
	private long mExitTime = 0;
	@ViewInject(R.id.fl)
	private FrameLayout fl;
	@ViewInject(R.id.newhome_ivIndictor)
	private IndictorView indictor;
	@ViewInject(R.id.homebanner)
	private ViewPager banner;
	@ViewInject(R.id.redpackage)
	private ImageView redpackage;
	@ViewInject(R.id.tv_city)
	private TextView tvCity;

	private NewHomeViewPagerAdapter viewPagerAdapter;
	// private List<View> listBanner;
	List<Map<String, Object>> listBanner;
	AppContext appContext;
	AnimationDrawable anim;

	Handler handler = new Handler() {

		public void handleMessage(android.os.Message msg) {
			GetProgressBar.dismissMyProgressBar();
			switch (msg.what) {
			case 0:// 访问失败
					// Toast.makeText(NewHomeActivity.this, "访问失败",
					// Toast.LENGTH_SHORT)
					// .show();
				break;
			case 1:// 访问成功
				LayoutParams params = new LayoutParams(
						AppContext.getScreenWidth(),
						AppContext.getScreenWidth() *9/10);
				banner.setLayoutParams(params);
				viewPagerAdapter.notifyDataSetChanged();
				banner.setAdapter(viewPagerAdapter);
				int type = 0;
				if (listBanner.size() > 0) {
					setIndicator();

					if (listBanner.get(0).get("type").toString() != null) {
						if (listBanner.get(0).get("type").toString()
								.equals("null")) {
							type = 0;
						} else {
							type = Integer.parseInt(listBanner.get(0)
									.get("type").toString());

						}
					}
					if (type == 1 || type == 3) {
						redpackage.setBackgroundResource(R.drawable.redpackage);
						redpackage.setVisibility(View.VISIBLE);
						anim.stop();
						anim = (AnimationDrawable) redpackage.getBackground();
						anim.start();
					} else if (type == 2) {
						redpackage
								.setBackgroundResource(R.drawable.yellowpackage);
						redpackage.setVisibility(View.VISIBLE);
						anim.stop();
						anim = (AnimationDrawable) redpackage.getBackground();
						anim.start();
					} else if (type == 0) {
						redpackage.setBackgroundResource(R.color.transparent);
						redpackage.setVisibility(View.GONE);

					}
					if (redpackage.isShown() && anim != null) {
						anim.start();
					} else if (!redpackage.isShown() && anim != null) {
						anim.stop();
					}
				}
				break;

			default:
				break;
			}
		}

	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.newhomelayout);
		ViewUtils.inject(this);
		init();
	}

	private void init() {
		tvCity.setText("[" + AppContext.myCity + "]");
		appContext = (AppContext) getApplication();
		listBanner = new ArrayList<Map<String, Object>>();

		viewPagerAdapter = new NewHomeViewPagerAdapter(this, listBanner);
		anim = (AnimationDrawable) redpackage.getBackground();
		if (appContext.isNetworkConnected()) {
	
			getCusId();
			getAdList("APP_START_PAGE");
		} else {
			toast(R.string.t_Connection);
		}
	}

	/**
	 * 参数:1.cusId 当前登录人cusId 2.(*) locationCode 广告位code （APP_START_PAGE开始页滑动广告/
	 * APP_PHONE_ADIN打电话弹窗广告） 3.lng 手机当前所在经度 4.lat 手机当前所在纬度
	 */
	private void getAdList(String locationCode) {
		RequestParams params = new RequestParams();
		// params.addQueryStringParameter("cusId", AppContext.userid);
		params.addQueryStringParameter("locationCode", "APP_START_PAGE");
		params.addQueryStringParameter("lng",
				String.valueOf(AppContext.myLongitude));
		params.addQueryStringParameter("lat",
				String.valueOf(AppContext.myLatitude));
		AppContext.getHtmlUitls().xUtils(this, HttpMethod.GET, "ad/getAdList",
				params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
//						Log.d("my", "getAdList onBack " + json);
					
						getAdRedPackageParse1(json);

					}
				});
	}



	/***
	 * 查询通用红包解析
	 * */
	public void getAdRedPackageParse1(JSONObject json) {
		try {
			if (json.getBoolean("success")) {
				JSONArray array = new JSONArray();
				array = json.getJSONArray("obj");
				if (array.length() > 0) {

					for (int i = 0; i < array.length(); i++) {
						JSONObject object;

						object = array.getJSONObject(i);

						parseObj1(
								Integer.parseInt(object.getString("adRedType")),
								object);
					}
				}
			}
		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		handler.sendEmptyMessage(1);
	}



	public void parseObj1(final int type, JSONObject object)
			throws JSONException {
		android.support.v4.view.ViewPager.LayoutParams params = new android.support.v4.view.ViewPager.LayoutParams();
		params.width = AppContext.getScreenWidth();
		params.height = AppContext.getScreenWidth();
		final Map<String, Object> map = new HashMap<String, Object>();

		map.put("adid", object.get("id"));// 广告id

		map.put("name", "" + object.get("name"));

		map.put("imageUrl", object.get("img"));
		
		map.put("objectType", object.get("objectType"));
		map.put("objectId", "" + object.get("objectId"));
		map.put("adRedEnvelopId", object.get("adRedEnvelopId"));
		map.put("adInfoId", object.get("id"));// 广告id
		map.put("adForwardId", object.get("adForwardId"));

		if (type == 1) {// 整点抢红包是设置type为1
			map.put("type", String.valueOf(type));
		} else {
			if (object.get("adRedType") != null) {
				if (object.get("adRedType").toString().equals("null")) {
					map.put("type", 0);
				} else {
					map.put("type", object.get("adRedType"));
				}
			} else {

				map.put("type", 0);
			}
		}

		ImageView ivImageView = new ImageView(NewHomeActivity.this);
		ivImageView.setScaleType(ScaleType.FIT_XY);
		ivImageView.setLayoutParams(params);
		ivImageView.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO
				// Auto-generated
				// method stub
				Intent intent = new Intent();
				if (type != 0) {
					intent = new Intent(NewHomeActivity.this,
							GetRedPackage.class);
					intent.putExtra("img", map.get("imageUrl").toString());
					Log.d("img", "%%%%%"+map.get("imageUrl").toString());
					intent.putExtra("objectId", map.get("objectId").toString());
					intent.putExtra("objectType", map.get("objectType")
							.toString());
					intent.putExtra("adRedEnvelopId", map.get("adRedEnvelopId")
							.toString());
					intent.putExtra("adForwardId", map.get("adForwardId")
							.toString());
					intent.putExtra("adInfoId", map.get("adid").toString());// 广告id
					startActivity(intent);
				} else {

					toSomeWhere(map.get("objectType").toString(),
							map.get("objectId").toString());
				}
			}
		});

		map.put("iv", ivImageView);
		Log.d("my", "#####"+map.get("imageUrl").toString());
		MyFormat.setBitmap(NewHomeActivity.this, ivImageView,
				map.get("imageUrl").toString(), params.width, params.height);
		listBanner.add(map);
		

	}
//
//	public void parseObj(final int type, JSONObject object)
//			throws JSONException {
//		android.support.v4.view.ViewPager.LayoutParams params = new android.support.v4.view.ViewPager.LayoutParams();
//		params.width = AppContext.getScreenWidth();
//		params.height = AppContext.getScreenWidth()*9/10;
//		final Map<String, Object> map = new HashMap<String, Object>();
//
//		map.put("adid", object.get("id"));
//
//		map.put("name", "" + object.get("name"));
//
//		map.put("imageUrl", object.get("imageUrl"));
//		map.put("objectType", object.get("objectType"));
//		map.put("objectId", object.get("objectId"));
//		map.put("adRedEnvelopId", object.get("adRedEnvelopId"));
//		map.put("adForwardId", object.get("adForwardId"));
//
//		if (type == 1) {// 整点抢红包是设置type为1
//			map.put("type", String.valueOf(type));
//		} else {
//			if (object.get("type") != null) {
//				if (object.get("type").toString().equals("null")) {
//					map.put("type", 0);
//				} else {
//					map.put("type", object.get("type"));
//				}
//			} else {
//
//				map.put("type", 0);
//			}
//		}
//
//		ImageView ivImageView = new ImageView(NewHomeActivity.this);
//		ivImageView.setScaleType(ScaleType.FIT_XY);
//		ivImageView.setLayoutParams(params);
//		ivImageView.setOnClickListener(new OnClickListener() {
//
//			@Override
//			public void onClick(View v) {
//				// TODO
//				// Auto-generated
//				// method stub
//				if(!appContext.isNetworkConnected()){
//					toast(R.string.t_Connection);
//					return;
//				}
//				Intent intent = new Intent();
//				if (type != 0) {
//					intent = new Intent(NewHomeActivity.this,
//							GetRedPackage.class);
//					intent.putExtra("img", map.get("imageUrl").toString());
//					intent.putExtra("objectId", map.get("objectId").toString());
//					intent.putExtra("objectType", map.get("objectType")
//							.toString());
//					intent.putExtra("adRedEnvelopId", map.get("adRedEnvelopId")
//							.toString());
//					intent.putExtra("adForwardId", map.get("adForwardId")
//							.toString());
//					intent.putExtra("adInfoId", map.get("adInfoId").toString());
//					startActivity(intent);
//				} else {
//
//					toSomeWhere(map.get("objectType").toString(),
//							map.get("objectId").toString());
//				}
//			}
//		});
//		map.put("iv", ivImageView);
//
//		listBanner.add(map);
//
//		MyFormat.setBitmap(NewHomeActivity.this, ivImageView,
//				map.get("imageUrl").toString(), params.width, params.height);
//	}

	/**
	 * 到店铺/商品也/专题/URL等
	 * 
	 * */
	private void toSomeWhere(String objectType, String objectId) {

		if (objectType.equals("1") && objectId != null
				&& !objectId.equals("null") && objectId.length() > 0) {// 跳转到店铺
			Intent intent = new Intent(this, ShopActivity.class);
			intent.putExtra("shopId", objectId);

			startActivity(intent);
		} else if (objectType.equals("2") && objectId != null
				&& !objectId.equals("null") && objectId.length() > 0) {// 跳转到商品
			Intent intent = new Intent(this, ProductDetailActivity.class);
			intent.putExtra("prodspecId", objectId);
			startActivity(intent);
		} else if (objectType.equals("3") && objectId != null
				&& !objectId.equals("null") && objectId.length() > 0) {// 专题

		} else if (objectType.equals("4") && objectId != null
				&& !objectId.equals("null") && objectId.length() > 0) {// url
			Intent to_more = new Intent(this,
					WebAty.class);

			to_more.putExtra("prodSpecId", objectId);
			startActivity(to_more);
		} else {// 其他

		}
	}

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		GetProgressBar.dismissMyProgressBar();
	}

	/** 设置指示剂 */
	void setIndicator() {
		// LayoutParams params=new LayoutParams(AppContext.getScreenWidth(),
		// AppContext.getScreenWidth()/5);
		// params.gravity=Gravity.BOTTOM ;
		// indictor.setLayoutParams(params);
		fl.setVisibility(View.VISIBLE);
		indictor.setIndictorMargin(4);
		indictor.setIndictorCount(listBanner.size());

		indictor.setData(listBanner);
		banner.setOnPageChangeListener(new OnPageChangeListener() {

			@Override
			public void onPageSelected(int arg0) {
				// TODO Auto-generated method stub
				indictor.setIndictorSelectedIndex(arg0);
				// Toast.makeText(NewHomeActivity.this, ""+arg0,
				// Toast.LENGTH_SHORT).show();
				int type = Integer.parseInt(listBanner.get(arg0).get("type")
						.toString());
				setRedPackage(type);
			}

			/** type=0不显示,type=1显示红包,type=2 显示黄包 */
			public void setRedPackage(int type) {
				if (type == 1) {
					redpackage.setBackgroundResource(R.drawable.redpackage);
					redpackage.setVisibility(View.VISIBLE);
					anim.stop();
					anim = (AnimationDrawable) redpackage.getBackground();
					anim.start();
				} else if (type == 2) {
					redpackage.setBackgroundResource(R.drawable.yellowpackage);
					redpackage.setVisibility(View.VISIBLE);
					anim.stop();
					anim = (AnimationDrawable) redpackage.getBackground();
					anim.start();

				} else {
					redpackage.setBackgroundResource(R.color.transparent);
					redpackage.setVisibility(View.GONE);

				}
				if (redpackage.isShown() && anim != null) {
					anim.start();
				} else if (!redpackage.isShown() && anim != null) {
					anim.stop();
				}
			}

			@Override
			public void onPageScrolled(int arg0, float arg1, int arg2) {
				// TODO Auto-generated method stub

			}

			@Override
			public void onPageScrollStateChanged(int arg0) {
				// TODO Auto-generated method stub

			}
		});
		;
	}

	/** 物理按键返回退出系统 */
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			if ((System.currentTimeMillis() - mExitTime) < 2000) {
				android.os.Process.killProcess(android.os.Process.myPid());
			} else {
				Toast.makeText(this, "再按一次退出程序", Toast.LENGTH_SHORT).show();
				ActivitiesManager.getAppManager().AppExit(NewHomeActivity.this);
				mExitTime = System.currentTimeMillis();
			}
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}

	@OnClick({ R.id.tongchengdaigou, R.id.xianchangxiaofei, R.id.shangpinhui,
			R.id.tuangou, R.id.xuqiufabu, R.id.woyaojianzhi, R.id.wodehoutai,
			R.id.haoyoufazhan, R.id.yewulianxi, R.id.tv_city })
	public void myclick(View v) {
		switch (v.getId()) {
		case R.id.tongchengdaigou:// 同城购物
			Toast.makeText(this, "正在开发中...", Toast.LENGTH_SHORT).show();
			// startActivity(new Intent(this, MainActivity.class));
			break;
		case R.id.xianchangxiaofei:// 现场消费
			startActivity(new Intent(this, BusinessListAty.class));
			Toast.makeText(this, "现场消费", Toast.LENGTH_SHORT).show();
			break;
		case R.id.shangpinhui:// 商品汇
			startActivity(new Intent(this, MainActivity.class));
			break;
		case R.id.tuangou:// 团购
			Toast.makeText(this, "正在开发中...", Toast.LENGTH_SHORT).show();
			break;
		case R.id.xuqiufabu:// 需求发布
			// startActivity(new Intent(this, DemandReleaseActivity.class));
			Toast.makeText(this, "正在开发中...", Toast.LENGTH_SHORT).show();
			break;
		case R.id.woyaojianzhi:// 我要兼职
			startActivity(new Intent(this, IWantPartTimeJob.class));
			// Toast.makeText(this, "正在开发中...", Toast.LENGTH_SHORT).show();
			break;
		case R.id.wodehoutai:// 我的后台
			startActivity(new Intent(this, MyHome.class));
			break;
		case R.id.haoyoufazhan:// 好友发展
			Intent intent = new Intent(this, Huiyuandengji.class);
			intent.putExtra("type", 2);
			startActivity(intent);
			break;
		case R.id.yewulianxi:// 业务联系
			Toast.makeText(this, "业务联系", Toast.LENGTH_SHORT).show();
			break;
		case R.id.tv_city:// 城市选择
			Intent intent2 = new Intent(this, CityListActivity.class);
			startActivityForResult(intent2, 1);
			break;

		}
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		// TODO Auto-generated method stub
		super.onActivityResult(requestCode, resultCode, data);
		if (requestCode == 1 && resultCode == RESULT_OK && data != null) {
			tvCity.setText("[" + data.getStringExtra("name") + "]");
		}
	}

	private void getCusId() {
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token", AppContext
				.getUserInformation().getAccess_token());
		;
		AppContext.getHtmlUitls().xUtilsm(this, HttpMethod.GET,
				"m/security/getCurrCus", params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub

					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						 myLogShow("my", "m/security/getCurrCus:"+json);
						try {
							if (json.getBoolean("success")) {

								SharedPreferences userPreferences = getSharedPreferences(
										"userInformation1",
										Context.MODE_PRIVATE);
								Editor editor = userPreferences.edit();
								String userid = "0";
								String userType = "0";
								String appellation = "快乐天使";
								userid = json.getJSONObject("obj").getString(
										"id");
								userType = json.getJSONObject("obj").getString(
										"userType");
								if (json.getJSONObject("obj").getString(
										"appellation") == null) {
									appellation = "快乐天使";
								}
							else {
									appellation = json.getJSONObject("obj")
											.getString("appellation");
								}
								String pictureUrl="";
							if(json.getJSONObject("obj").getString(
									"pictureUrl")!= null){
								pictureUrl=json.getJSONObject("obj").getString(
										"pictureUrl");
							}
								editor.putString("userid", userid);
								editor.putString("userType", userType);
								editor.putString("appellation", appellation);
								editor.putString("pictureUrl", pictureUrl);
								editor.commit();
								AppContext.userid = userid;
								AppContext.userType = userType;
								AppContext.appellation = appellation;
								// finish();
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				});
	}
}
