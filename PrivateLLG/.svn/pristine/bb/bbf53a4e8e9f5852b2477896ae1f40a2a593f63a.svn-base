package com.llg.privateproject.receiver;

import java.lang.reflect.Method;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.KeyEvent;

import com.android.internal.telephony.ITelephony;
import com.llg.privateproject.actvity.PhoneActivity;
import com.llg.privateproject.utils.PhoneUtils;
import com.llg.privateproject.utils.SharedPreferencesUtil;

public class MyPhoneBroadcastReceiver extends BroadcastReceiver {
	private final static String TAG = PhoneActivity.TAG;

	@Override
	public void onReceive(Context context, Intent intent) {
		String action = intent.getAction();
		Log.i(TAG, "[Broadcast]" + action);

		// 呼入电话
		if (action.equals(PhoneActivity.B_PHONE_STATE)) {
			Log.i(TAG, "[Broadcast]PHONE_STATE");
			doReceivePhone(context, intent);
		}
	}

	/**
	 * 处理电话广播.
	 * 
	 * @param context
	 * @param intent
	 */
	public void doReceivePhone(Context context, Intent intent) {
		String phoneNumber = intent
				.getStringExtra(TelephonyManager.EXTRA_INCOMING_NUMBER);
		TelephonyManager telephony = (TelephonyManager) context
				.getSystemService(Context.TELEPHONY_SERVICE);
		int state = telephony.getCallState();

		switch (state) {
		case TelephonyManager.CALL_STATE_RINGING:
			Log.i(TAG, "[Broadcast]等待接电话=" + phoneNumber);
			call(phoneNumber, context, telephony);
			// try {
			// ITelephony iTelephony = PhoneUtils.getITelephony(telephony);
			// iTelephony.answerRingingCall();// 自动接通电话
			// // iTelephony.endCall();//自动挂断电话
			// } catch (Exception e) {
			// Log.e(TAG, "[Broadcast]Exception=" + e.getMessage(), e);
			// }
			break;
		case TelephonyManager.CALL_STATE_IDLE:
			Log.i(TAG, "[Broadcast]电话挂断....=" + phoneNumber);
			call(phoneNumber, context, telephony);
			// if (phoneNumber != null) {
			// long mStartTime = (Long) SharedPreferencesUtil.getParam(
			// context, "Long", 0l);
			// // 如果在20s内 并且呼入的电话是拨打的电话
			// if (System.currentTimeMillis() - mStartTime < 20000
			// && phoneNumber.equals(SharedPreferencesUtil.getParam(
			// context, "String", ""))) {
			// try {
			// ITelephony itelephony = PhoneUtils
			// .getITelephony(telephony);
			// itelephony.answerRingingCall();
			// } catch (Exception e) {
			// Log.d(TAG, "失败");
			// Log.e(TAG, "[Broadcast]Exception=" + e.getMessage(), e);
			// try {
			// answerRingingCall(context);
			// } catch (Exception e2) {
			// // TODO: handle exception
			// Log.e(TAG, e2.getMessage());
			// }
			// }
			// }
			//
			// }
			break;
		case TelephonyManager.CALL_STATE_OFFHOOK:
			Log.i(TAG, "[Broadcast]通话中=" + phoneNumber);
			break;
		}
	}

	private void call(String phoneNumber, Context context,
			TelephonyManager telephony) {
		if (phoneNumber != null) {
			long mStartTime = (Long) SharedPreferencesUtil.getParam(context,
					"Long", 0l);
			// 如果在20s内 并且呼入的电话是拨打的电话
			// if (System.currentTimeMillis() - mStartTime < 20000
			// && phoneNumber.equals(SharedPreferencesUtil.getParam(
			// context, "String", ""))) {
			try {
				ITelephony itelephony = PhoneUtils.getITelephony(telephony);
				itelephony.answerRingingCall();
			} catch (Exception e) {
				Log.d(TAG, "失败");
				Log.e(TAG, "[Broadcast]Exception=" + e.getMessage(), e);
				try {
					answerRingingCall(context);
				} catch (Exception e2) {
					// TODO: handle exception
					Log.e(TAG, e2.getMessage());
					// autoAnswerPhone(context);
					call1(context);
				}
			}
			// }

		}
	}

	// 4.1
	private void answerRingingCall(Context context) {
		// 放开耳机按钮
		Intent localIntent3 = new Intent(Intent.ACTION_MEDIA_BUTTON);
		KeyEvent localKeyEvent2 = new KeyEvent(KeyEvent.ACTION_UP,
				KeyEvent.KEYCODE_HEADSETHOOK);
		localIntent3.putExtra("android.intent.extra.KEY_EVENT", localKeyEvent2);
		context.sendOrderedBroadcast(localIntent3,
				"android.permission.CALL_PRIVILEGED");

		// 插耳机
		Intent localIntent1 = new Intent(Intent.ACTION_HEADSET_PLUG);
		localIntent1.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
		localIntent1.putExtra("state", 1);
		localIntent1.putExtra("microphone", 1);
		localIntent1.putExtra("name", "Headset");
		context.sendOrderedBroadcast(localIntent1,
				"android.permission.CALL_PRIVILEGED");
		// 按下耳机按钮
		Intent localIntent2 = new Intent(Intent.ACTION_MEDIA_BUTTON);
		KeyEvent localKeyEvent1 = new KeyEvent(KeyEvent.ACTION_DOWN,
				KeyEvent.KEYCODE_HEADSETHOOK);
		localIntent2.putExtra("android.intent.extra.KEY_EVENT", localKeyEvent1);
		context.sendOrderedBroadcast(localIntent2,
				"android.permission.CALL_PRIVILEGED");
		// 放开耳机按钮
		localIntent3 = new Intent(Intent.ACTION_MEDIA_BUTTON);
		localKeyEvent2 = new KeyEvent(KeyEvent.ACTION_UP,
				KeyEvent.KEYCODE_HEADSETHOOK);
		localIntent3.putExtra("android.intent.extra.KEY_EVENT", localKeyEvent2);
		context.sendOrderedBroadcast(localIntent3,
				"android.permission.CALL_PRIVILEGED");
		// 拔出耳机
		Intent localIntent4 = new Intent(Intent.ACTION_HEADSET_PLUG);
		localIntent4.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
		localIntent4.putExtra("state", 0);
		localIntent4.putExtra("microphone", 1);
		localIntent4.putExtra("name", "Headset");
		context.sendOrderedBroadcast(localIntent4,
				"android.permission.CALL_PRIVILEGED");
	}

	public void autoAnswerPhone(Context context) {

		try {
			Log.e(TAG, "用于Android2.3及2.3以上的版本上");
			Intent intent = new Intent("android.intent.action.MEDIA_BUTTON");
			KeyEvent keyEvent = new KeyEvent(KeyEvent.ACTION_DOWN,
					KeyEvent.KEYCODE_HEADSETHOOK);
			intent.putExtra("android.intent.extra.KEY_EVENT", keyEvent);
			context.sendOrderedBroadcast(intent,
					"android.permission.CALL_PRIVILEGED");
			intent = new Intent("android.intent.action.MEDIA_BUTTON");
			keyEvent = new KeyEvent(KeyEvent.ACTION_UP,
					KeyEvent.KEYCODE_HEADSETHOOK);
			intent.putExtra("android.intent.extra.KEY_EVENT", keyEvent);
			context.sendOrderedBroadcast(intent,
					"android.permission.CALL_PRIVILEGED");
			Intent localIntent1 = new Intent(Intent.ACTION_HEADSET_PLUG);
			localIntent1.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
			localIntent1.putExtra("state", 1);
			localIntent1.putExtra("microphone", 1);
			localIntent1.putExtra("name", "Headset");
			context.sendOrderedBroadcast(localIntent1,
					"android.permission.CALL_PRIVILEGED");
			Intent localIntent2 = new Intent(Intent.ACTION_MEDIA_BUTTON);
			KeyEvent localKeyEvent1 = new KeyEvent(KeyEvent.ACTION_DOWN,
					KeyEvent.KEYCODE_HEADSETHOOK);
			localIntent2.putExtra("android.intent.extra.KEY_EVENT",
					localKeyEvent1);
			context.sendOrderedBroadcast(localIntent2,
					"android.permission.CALL_PRIVILEGED");
			Intent localIntent3 = new Intent(Intent.ACTION_MEDIA_BUTTON);
			KeyEvent localKeyEvent2 = new KeyEvent(KeyEvent.ACTION_UP,
					KeyEvent.KEYCODE_HEADSETHOOK);
			localIntent3.putExtra("android.intent.extra.KEY_EVENT",
					localKeyEvent2);
			context.sendOrderedBroadcast(localIntent3,
					"android.permission.CALL_PRIVILEGED");
			Intent localIntent4 = new Intent(Intent.ACTION_HEADSET_PLUG);
			localIntent4.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);
			localIntent4.putExtra("state", 0);
			localIntent4.putExtra("microphone", 1);
			localIntent4.putExtra("name", "Headset");
			context.sendOrderedBroadcast(localIntent4,
					"android.permission.CALL_PRIVILEGED");
		} catch (Exception e2) {
			e2.printStackTrace();
			Intent meidaButtonIntent = new Intent(Intent.ACTION_MEDIA_BUTTON);
			KeyEvent keyEvent = new KeyEvent(KeyEvent.ACTION_UP,
					KeyEvent.KEYCODE_HEADSETHOOK);
			meidaButtonIntent.putExtra(Intent.EXTRA_KEY_EVENT, keyEvent);
			context.sendOrderedBroadcast(meidaButtonIntent, null);
		}
	}

	/**
	 * 高版本
	 */
	private void call1(Context context) {
		try {
			Log.d(TAG, "高版本...");
			Method method = Class.forName("android.os.ServiceManager")

			.getMethod("getService", String.class);

			IBinder binder = (IBinder) method.invoke(null,
					new Object[] { context.TELEPHONY_SERVICE });

			ITelephony telephony = ITelephony.Stub.asInterface(binder);

			telephony.answerRingingCall();

		} catch (NoSuchMethodException e) {

			Log.d("Sandy", "", e);

		} catch (ClassNotFoundException e) {

			Log.d("Sandy", "", e);

		} catch (Exception e) {

			Log.d("Sandy", "", e);

			try {

				Log.e("Sandy", "for version 4.1 or larger");

				Intent intent = new Intent("android.intent.action.MEDIA_BUTTON");

				KeyEvent keyEvent = new KeyEvent(KeyEvent.ACTION_UP,
						KeyEvent.KEYCODE_HEADSETHOOK);

				intent.putExtra("android.intent.extra.KEY_EVENT", keyEvent);

				context.sendOrderedBroadcast(intent,
						"android.permission.CALL_PRIVILEGED");

			} catch (Exception e2) {

				Log.d("Sandy", "", e2);

				Intent meidaButtonIntent = new Intent(
						Intent.ACTION_MEDIA_BUTTON);

				KeyEvent keyEvent = new KeyEvent(KeyEvent.ACTION_UP,
						KeyEvent.KEYCODE_HEADSETHOOK);

				meidaButtonIntent.putExtra(Intent.EXTRA_KEY_EVENT, keyEvent);

				context.sendOrderedBroadcast(meidaButtonIntent, null);

			}

		}
	}
}
