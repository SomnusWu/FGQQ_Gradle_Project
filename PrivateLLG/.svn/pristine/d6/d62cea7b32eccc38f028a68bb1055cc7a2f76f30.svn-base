package com.llg.privateproject.listener;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import android.util.Log;

import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.Poi;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.entities.UserInformation;

public class MyLocationListener implements BDLocationListener {
	static MyLocationListener myLocationListener;

	private MyLocationListener() {
		// TODO Auto-generated constructor stub
	}

	public static MyLocationListener getMyLocationListener() {
		if (myLocationListener == null) {
			myLocationListener = new MyLocationListener();
		}
		return myLocationListener;
	}

	@Override
	public void onReceiveLocation(BDLocation location) {
		// TODO Auto-generated method stub
		// Receive Location
		// Log.i("my", "city"+location.getCity());
		// Log.i("my", "纬度"+location.getLatitude());
		// Log.i("my", "经度"+location.getLongitude());
		// Log.i("my", "地址"+location.getAddrStr());
		if (location.getLatitude() > 1) {
			AppContext.myLatitude = location.getLatitude();
			AppContext.myLongitude = location.getLongitude();
			
		}
		if (location.getCity() != null) {

			AppContext.myCity = location.getCity();
		}
		if (location.getAddrStr() != null) {

			AppContext.myAddress = location.getAddrStr();
		}
		if (location.getStreet()!=null) {
			AppContext.Street=location.getStreet();
		}
		if (location.getCityCode() != null) {
			AppContext.myCityCode = location.getCityCode();
		}
		
		// Log.i("my", "城市"+AppContext.myCity);
		// Log.i("my", "地址"+AppContext.myAddress);

		StringBuffer sb = new StringBuffer(256);
		sb.append("time : ");
		sb.append(location.getTime());
		sb.append("\nerror code : ");
		sb.append(location.getLocType());
		sb.append("\nlatitude : ");
		sb.append(location.getLatitude());
		sb.append("\nlontitude : ");
		sb.append(location.getLongitude());
		sb.append("\nradius : ");
		sb.append(location.getRadius());
		if (location.getLocType() == BDLocation.TypeGpsLocation) {// GPS定位结果
			sb.append("\nspeed : ");
			sb.append(location.getSpeed());// 单位：公里每小时
			sb.append("\nsatellite : ");
			sb.append(location.getSatelliteNumber());
			sb.append("\nheight : ");
			sb.append(location.getAltitude());// 单位：米
			sb.append("\ndirection : ");
			sb.append(location.getDirection());// 单位度
			sb.append("\naddr : ");
			sb.append(location.getAddrStr());
			sb.append("\ndescribe : ");
			sb.append("gps定位成功");

		} else if (location.getLocType() == BDLocation.TypeNetWorkLocation) {// 网络定位结果
			sb.append("\naddr : ");
			sb.append(location.getAddrStr());
			// 运营商信息
			sb.append("\noperationers : ");
			sb.append(location.getOperators());
			sb.append("\ndescribe : ");
			sb.append("网络定位成功");
		} else if (location.getLocType() == BDLocation.TypeOffLineLocation) {// 离线定位结果
			sb.append("\ndescribe : ");
			sb.append("离线定位成功，离线定位结果也是有效的");
		} else if (location.getLocType() == BDLocation.TypeServerError) {
			sb.append("\ndescribe : ");
			sb.append("服务端网络定位失败，可以反馈IMEI号和大体定位时间到loc-bugs@baidu.com，会有人追查原因");
		} else if (location.getLocType() == BDLocation.TypeNetWorkException) {
			sb.append("\ndescribe : ");
			sb.append("网络不同导致定位失败，请检查网络是否通畅");
		} else if (location.getLocType() == BDLocation.TypeCriteriaException) {
			sb.append("\ndescribe : ");
			sb.append("无法获取有效定位依据导致定位失败，一般是由于手机的原因，处于飞行模式下一般会造成这种结果，可以试着重启手机");
		}
		sb.append("\nlocationdescribe : ");
		sb.append(location.getLocationDescribe());// 位置语义化信息
		List<Poi> list = location.getPoiList();// POI数据
		if (list != null) {
			sb.append("\npoilist size = : ");
			sb.append(list.size());
			for (Poi p : list) {
				sb.append("\npoi= : ");
				sb.append(p.getId() + " " + p.getName() + " " + p.getRank());
			}
		}

		// Log.i("my", sb.toString());
	}

}
