package com.llg.privateproject.actvity;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListView;
import android.widget.RatingBar;
import android.widget.TextView;
import android.widget.Toast;

import com.bjg.lcc.jsonparser.ParseJson;
import com.bjg.lcc.privateproject.R;
import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener2;
import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.db.sqlite.Selector;
import com.lidroid.xutils.exception.DbException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.adapters.BusinessAdapter;
import com.llg.privateproject.entities.Advertisement;
import com.llg.privateproject.entities.Citys;
import com.llg.privateproject.entities.MenuItem;
import com.llg.privateproject.entities.NowBuyBusiness;
import com.llg.privateproject.entities.Region;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.fragment.BaseActivity.Refresh;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.llg.privateproject.utils.Constants;
import com.llg.privateproject.view.CustomProgressSmall;
import com.llg.privateproject.view.NearbyPopuWindow;

public class BusinessListAty extends BaseActivity implements
		OnRefreshListener2<ListView> {
	@ViewInject(R.id.ratingbar)
	private RatingBar ratingBar;
	@ViewInject(R.id.listview_business)
	private PullToRefreshListView lvBusiness;
	@ViewInject(R.id.tv_nearby)
	private TextView tvNearby;
	@ViewInject(R.id.ly_load)
	private LinearLayout lyLoad;
	@ViewInject(R.id.tv_search)
	private TextView tvSearch;
	@ViewInject(R.id.edt_search)
	private EditText edtSearch;
	private BusinessAdapter adapter;
	private NearbyPopuWindow nearbyPopuWindow;
	// private String path;// 城市数据库在本地的路径
	private String id = "402880fb4fdf2e7b014fdf31bd420000";// 商圈ID
	private List<NowBuyBusiness> tlist;// 总数据
	private int page = 1;// 页数
	private String name;// 搜索的商家名字

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.aty_business_list);
		ViewUtils.inject(this);
		// path = Environment.getExternalStorageDirectory().getPath()
		// + File.separator + "Citys";
		// DbUtils dbUtils = DbUtils.create(this, path, "city");
		// try {
		// Citys city = dbUtils.findFirst(Selector.from(Citys.class).where(
		// "baidu_code", "=", 265 + ""));
		// Log.i("tag", city.getCode() + "-------------查询到的code");
		// } catch (DbException e) {
		// e.printStackTrace();
		// }
		initUI();
		requestBusinessList();
	}

	Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case 1:
				autoLoading.hideAll();
				adapter.setList(tlist);
				if (customProgressSmall.isShowing()) {
					customProgressSmall.dismiss();
				}
				lvBusiness.onRefreshComplete();

				break;

			default:
				break;
			}
		};
	};

	@OnClick({ R.id.iv_back, R.id.tv_nearby, R.id.tv_search })
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.iv_back:
			finish();
		case R.id.tv_search:
			name = getStr(edtSearch);
			if (name != null || name.length() > 0) {
				customProgressSmall.show();
				requestBusinessList();
			} else {
				Toast.makeText(this, "输入的关键字不能为空", Toast.LENGTH_LONG).show();
			}
			break;
		case R.id.tv_nearby:
			if (nearbyPopuWindow == null) {
				nearbyPopuWindow = new NearbyPopuWindow(this,
						LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
			}
			nearbyPopuWindow.showAsDropDown(tvNearby);
			break;
		default:
			break;
		}
	}

	private void find() {

	}

	/**
	 * @param id
	 * 
	 *            商圈id 取得商圈ID
	 */
	public void setID(String id) {
		this.id = id;
		requestBusinessList();
	}

	/**
	 * 请求商圈的商家列表
	 */
	private void requestBusinessList() {
		RequestParams params = new RequestParams();
		Log.i("tag", id + "---------id-------");
		params.addQueryStringParameter("mapCircleId", id);
		params.addQueryStringParameter("spot", 1 + "");
		params.addQueryStringParameter("pageNo", page + "");
		if (AppContext.myLongitude != 0 && AppContext.myLatitude != 0) {
			params.addQueryStringParameter("lng", AppContext.myLongitude + "");
			params.addQueryStringParameter("lat", AppContext.myLatitude + "");
		}
		if (name != null) {
			params.addQueryStringParameter("name", name);
		}
		AppContext.getHtmlUitls().xUtils(this, HttpMethod.POST, "findShops",
				params, new HttpCallback() {
					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
						Log.i("tag", msg + "-------requestBusinessList()------");
						autoLoading.showExceptionLayout();
						// handler.sendEmptyMessage(2);
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						Map<String, Object> map = ParseJson.getParseJson()
								.parseIsSuccess(json);
						Log.i("tag", json.toString() + "----------成功了------");
						Log.i("tag", (Boolean) map.get("isSuccess")
								+ "---发送个人请求判断isSuccess------onBack------");
						if ((Boolean) map.get("isSuccess")) {
							List<NowBuyBusiness> list = ParseJson
									.getParseJson().parseNowBuyBusiness(json);
							connectData(list);
							Log.i("tag", list + "---------------商家列表大小()");
							handler.sendEmptyMessage(1);
						}
					}
				});
	}

	/**
	 * @param list
	 *            根据page拼接数据
	 */
	private void connectData(List<NowBuyBusiness> list) {
		if (page == 1) {
			tlist.clear();
			tlist.addAll(list);
		} else {
			tlist.addAll(list);
		}
		handler.sendEmptyMessage(1);
	}

	/**
	 * 初始化界面
	 */
	private void initUI() {
		initAutoLoading(lyLoad);
		tlist = new ArrayList<NowBuyBusiness>();
		adapter = new BusinessAdapter(this, tlist);
		lvBusiness.setAdapter(adapter);
		lvBusiness.setOnRefreshListener(this);
		lvBusiness.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(BusinessListAty.this,
						ShopActivity.class);
				intent.putExtra("shopId", id);
				startActivity(intent);
			}
		});
		autoLoading.setClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				requestBusinessList();
			}
		});
	}

	// 下拉刷新
	@Override
	public void onPullDownToRefresh(PullToRefreshBase<ListView> refreshView) {
		// TODO Auto-generated method stub
		page = 1;
		requestBusinessList();
	}

	// 上拉加载
	@Override
	public void onPullUpToRefresh(PullToRefreshBase<ListView> refreshView) {
		// TODO Auto-generated method stub
		page = page + 1;
		requestBusinessList();
	}
}
