package com.llg.privateproject.actvity;

import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;

import com.bjg.lcc.privateproject.R;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.help.GetProgressBar;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.entities.UserInformation;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.fragment.BaseFragment.Refresh;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.TextView;

public class PhoneDetailAty extends BaseActivity {
	String name;
	List<String> phonelist;
	@ViewInject(R.id.tv_name)
	private TextView tvName;
	@ViewInject(R.id.tv_1)
	private TextView tvPhone1;
	@ViewInject(R.id.tv_2)
	private TextView tvPhone2;
	@ViewInject(R.id.tv_3)
	private TextView tvPhone3;
	@ViewInject(R.id.ly)
	private LinearLayout ly;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.aty_phone_detail);
		ViewUtils.inject(this);
		name = getIntent().getStringExtra("name");
		phonelist = getIntent().getStringArrayListExtra("phonelist");
		Log.i("tag", name + "name");
		Log.i("tag", ((phonelist == null) ? 0 : phonelist.size()) + "phonelist");
		initUI();
	}

	private void initUI() {
		LayoutParams layoutParams = new LayoutParams(LayoutParams.MATCH_PARENT,
				AppContext.getScreenHeight() / 3);
		ly.setLayoutParams(layoutParams);
		if (TextUtils.isEmpty(name)) {
			return;
		} else {
			tvName.setText(name);
		}
		if (phonelist != null && phonelist.size() > 0) {
			if (phonelist.size() == 1) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone1.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.GONE);
				tvPhone3.setVisibility(View.GONE);
			} else if (phonelist.size() == 2) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone2.setText(phonelist.get(1));
				tvPhone1.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.VISIBLE);
				tvPhone3.setVisibility(View.GONE);
			} else if (phonelist.size() == 3) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone2.setText(phonelist.get(1));
				tvPhone3.setText(phonelist.get(2));
				tvPhone3.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.VISIBLE);
				tvPhone1.setVisibility(View.VISIBLE);
			}
		}
	}

	@OnClick({ R.id.tv_1, R.id.tv_2, R.id.tv_3, })
	public void onClick(View v) {
		Log.i("tag", "++++++++++++++++++=----------------tag");
		customProgressSmall.show();
		switch (v.getId()) {
		case R.id.tv_1:
			call(phonelist.get(0), UserInformation.getAccess_token());
			break;
		case R.id.tv_2:
			call(phonelist.get(1), UserInformation.getAccess_token());
			break;
		case R.id.tv_3:
			call(phonelist.get(2), UserInformation.getAccess_token());
			break;
		default:
			break;
		}
	}

	/** 打电话 */
	private void call(final String number, String access_token) {
		if (!appContext.isNetworkConnected()) {
			toast("网络未连接");
			return;
		}
		if (TextUtils.isEmpty(number)) {
			toast("请输入正确的电话号码");
			return;
		}
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token",
				UserInformation.getAccess_token());
		params.addQueryStringParameter("tel",
				getSharePrefence().getString("phone", null));
		params.addQueryStringParameter("callerDisplayNumber", number);
		AppContext.getHtmlUitls().xUtilsm(this, HttpMethod.POST, "m/tel/call",
				params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
						customProgressSmall.dismiss();
						if (msg.equals("401")) {
							startActivity(new Intent(PhoneDetailAty.this,
									WebLoginActivity.class));
						} else {
							toast("拨打失败");
						}
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						Log.i("tag", json.toString());
						try {
							if (json.getBoolean("success")) {
								customProgressSmall.dismiss();
								if (json.getJSONObject("obj")
										.getString("retCode").equals("0")) {
//									GetProgressBar.getProgressBar(
//											PhoneDetailAty.this, 1);
//									toast("电话已拨出");

								} else {
									toast("余额不足");
								}
							} else {
								if (json.get("errorCode").equals("NOT_LOGIN")) {
									// Log.i("tag", json.toString()
									// + "------监听上一句--------");
									setRefreshListtener(new Refresh() {
										@Override
										public void refreshRequst(
												String access_token) {
											// TODO Auto-generated method
											// stub
											Log.i("tag", "------监听里-------");
											call(number, access_token);
										}
									});
									RefeshToken();
								} else {
									customProgressSmall.dismiss();
									toast("拨打失败");
								}
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				});
	}
}
