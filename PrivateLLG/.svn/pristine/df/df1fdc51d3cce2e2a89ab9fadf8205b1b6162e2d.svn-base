package com.llg.privateproject.actvity;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;

import com.bjg.lcc.privateproject.R;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.help.GetProgressBar;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.entities.UserInformation;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.fragment.BaseFragment.Refresh;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.database.Cursor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class PhoneDetailAty extends BaseActivity {
	private String name;
	private String contactId;
	private int phoneCount;
	List<String> phonelist;
	@ViewInject(R.id.tv_name)
	private TextView tvName;
	@ViewInject(R.id.tv_1)
	private TextView tvPhone1;
	@ViewInject(R.id.tv_2)
	private TextView tvPhone2;
	@ViewInject(R.id.tv_3)
	private TextView tvPhone3;
	@ViewInject(R.id.tv_net)
	private TextView tvNet;
	@ViewInject(R.id.ry)
	private RelativeLayout ry;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.aty_phone_detail);
		ViewUtils.inject(this);
		phonelist = new ArrayList<String>();
		name = getIntent().getStringExtra("name");
		phoneCount = getIntent().getIntExtra("phoneCount", -1);
		contactId = getIntent().getStringExtra("id");
		getPhone();
		initUI();
	}

	@Override
	protected void onPause() {
		// TODO Auto-generated method stub
		super.onPause();
		if (customProgressSmall.isShowing()) {
			customProgressSmall.dismiss();
		}
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		unregisterReceiver(receiver);
	}

	private void initUI() {
		registerReceiver();
		LayoutParams layoutParams = new LayoutParams(LayoutParams.MATCH_PARENT,
				AppContext.getScreenHeight() / 3);
		ry.setLayoutParams(layoutParams);
		if (TextUtils.isEmpty(name)) {
			return;
		} else {
			tvName.setText(name);
		}
		if (phonelist != null && phonelist.size() > 0) {
			if (phonelist.size() == 1) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone1.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.GONE);
				tvPhone3.setVisibility(View.GONE);
			} else if (phonelist.size() == 2) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone2.setText(phonelist.get(1));
				tvPhone1.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.VISIBLE);
				tvPhone3.setVisibility(View.GONE);
			} else if (phonelist.size() == 3) {
				tvPhone1.setText(phonelist.get(0));
				tvPhone2.setText(phonelist.get(1));
				tvPhone3.setText(phonelist.get(2));
				tvPhone3.setVisibility(View.VISIBLE);
				tvPhone2.setVisibility(View.VISIBLE);
				tvPhone1.setVisibility(View.VISIBLE);
			}
		}
		tvNet.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent = new Intent("android.settings.WIRELESS_SETTINGS");
				startActivity(intent);
			}
		});
	}

	@OnClick({ R.id.tv_1, R.id.tv_2, R.id.tv_3, })
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.tv_1:
			call(phonelist.get(0).replaceAll(" ", ""),
					UserInformation.getAccess_token());
			break;
		case R.id.tv_2:
			call(phonelist.get(1).replaceAll(" ", ""),
					UserInformation.getAccess_token());
			break;
		case R.id.tv_3:
			call(phonelist.get(2).replaceAll(" ", ""),
					UserInformation.getAccess_token());
			break;
		default:
			break;
		}
	}

	public void getPhone() {
		Cursor phoneCursor;
		if (phoneCount > 0 && !TextUtils.isEmpty(contactId)) {
			// 获得联系人的电话号码列表
			phoneCursor = getContentResolver().query(
					ContactsContract.CommonDataKinds.Phone.CONTENT_URI,
					null,
					ContactsContract.CommonDataKinds.Phone.CONTACT_ID + "="
							+ contactId, null, null);
			if (phoneCursor.moveToFirst()) {
				do {
					// 遍历所有的联系人下面所有的电话号码
					String phoneNumber = phoneCursor
							.getString(phoneCursor
									.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
					// contact.setNumber(number);
					phonelist.add(phoneNumber);
					// 使用Toast技术显示获得的号码
					// Toast.makeText(ContentProviderDemo.this,
					// "联系人电话："+phoneNumber,Toast.LENGTH_LONG).show();

				} while (phoneCursor.moveToNext());
			}
			if (phoneCursor != null) {
				phoneCursor.close();
			}
		}
	}

	@Override
	protected void doAction1() {
		// TODO Auto-generated method stub
		super.doAction1();
		tvNet.setVisibility(View.VISIBLE);
	}

	@Override
	protected void doAction2() {
		// TODO Auto-generated method stub
		super.doAction2();
		tvNet.setVisibility(View.GONE);

	}

	// /** 打电话 */
	// private void call(final String number, String access_token) {
	// if (!appContext.isNetworkConnected()) {
	// toast("网络未连接");
	// return;
	// }
	// if (TextUtils.isEmpty(number)) {
	// toast("请输入正确的电话号码");
	// return;
	// }
	// RequestParams params = new RequestParams();
	// params.addQueryStringParameter("access_token", access_token);
	// params.addQueryStringParameter("tel",
	// getSharePrefence().getString("phone", "null"));
	// params.addQueryStringParameter("callerDisplayNumber", number);
	// AppContext.getHtmlUitls().xUtils(this, HttpMethod.POST, "tel/call",
	// params, new HttpCallback() {
	//
	// @Override
	// public void onError(String msg) {
	// // TODO Auto-generated method stub
	// customProgressSmall.dismiss();
	// if (msg.equals("401")) {
	// startActivity(new Intent(PhoneDetailAty.this,
	// WebLoginActivity.class));
	// } else {
	// toast("拨打失败");
	// }
	// }
	//
	// @Override
	// public void onBack(JSONObject json) {
	// // TODO Auto-generated method stub
	// Log.i("tag", json.toString());
	// try {
	// if (json.getBoolean("success")) {
	// if (json.getJSONObject("obj")
	// .getString("retCode").equals("0")) {
	//
	// // GetProgressBar.getProgressBar(
	// // PhoneDetailAty.this, 1);
	// // toast("电话已拨出");
	//
	// } else {
	// customProgressSmall.dismiss();
	// toast("余额不足");
	// }
	// } else {
	// if (json.get("errorCode").equals("NOT_LOGIN")) {
	// // Log.i("tag", json.toString()
	// // + "------监听上一句--------");
	// setRefreshListtener(new Refresh() {
	// @Override
	// public void refreshRequst(
	// String access_token) {
	// // TODO Auto-generated method
	// // stub
	// call(number, access_token);
	// }
	// });
	// RefeshToken();
	// } else {
	// customProgressSmall.dismiss();
	// toast("拨打失败");
	// }
	// }
	// } catch (JSONException e) {
	// // TODO Auto-generated catch block
	// e.printStackTrace();
	// }
	// }
	// });
	// }
	/** 打电话 */
	private void call(final String number, String access_token) {
		if (!appContext.isNetworkConnected()) {
			toast("网络未连接");
			return;
		}
		customProgressSmall.setMessage("正在拨号中");
		customProgressSmall.show();
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token", access_token);
		params.addQueryStringParameter("tel",
				getSharePrefence().getString("phone", "null"));
		Log.i("tag", number + "number");
		params.addQueryStringParameter("callerDisplayNumber", number);
		AppContext.getHtmlUitls().xUtils(this, HttpMethod.POST, "tel/call",
				params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
						customProgressSmall.dismiss();
						if (msg.equals("401")) {
							startActivity(new Intent(PhoneDetailAty.this,
									WebLoginActivity.class));
						} else {
							toast("拨打失败");
						}
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						Log.i("tag", json.toString());
						try {
							if (json.getBoolean("success")) {
								if (json.getJSONObject("obj")
										.getString("retCode").equals("0")) {
									customProgressSmall.dismiss();
									customProgressSmall.setMessage("正在拨号中...");
									customProgressSmall.show();
									// GetProgressBar.getProgressBar(context,
									// 1);
									// toast("电话已拨出2");
								} else {
									customProgressSmall.dismiss();
									toast("余额不足");
								}

							} else {
								if (json.get("errorCode").equals("NOT_LOGIN")) {
									// Log.i("tag", json.toString()
									// + "------监听上一句--------");
									setRefreshListtener(new Refresh() {
										@Override
										public void refreshRequst(
												String access_token) {
											// TODO Auto-generated method
											// stub
											Log.i("tag", "------监听里-------");
											call(number, access_token);
										}
									});
									RefeshToken();
								} else {
									customProgressSmall.dismiss();
									toast("拨打失败");
								}
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}
				});
	}
}
