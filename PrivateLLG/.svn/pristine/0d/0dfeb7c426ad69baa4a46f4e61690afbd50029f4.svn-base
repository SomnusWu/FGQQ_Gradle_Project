package com.llg.privateproject.actvity;

import java.util.Map;

import org.json.JSONObject;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.bjg.lcc.jsonparser.ParseJson;
import com.bjg.lcc.privateproject.R;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.lidroid.xutils.view.annotation.event.OnClick;
import com.llg.help.MyFormat;
import com.llg.help.ScreenManager;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.entities.AdvertisementDetail;
import com.llg.privateproject.fragment.BaseActivity;
import com.llg.privateproject.fragment.BaseActivity.Refresh;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;

public class AdvertisementDetailAty extends BaseActivity {
	private Bundle bundle;
	private String adInfoId;
	@ViewInject(R.id.ly_load)
	private LinearLayout lyLoad;
	// 广告图片
	@ViewInject(R.id.iv)
	private ImageView iv;
	// 广告位分类
	@ViewInject(R.id.tv_kind)
	private TextView tvKind;
	// 广告创建时间
	@ViewInject(R.id.tv_time)
	private TextView tvTime;
	// 广告投入现金金额
	@ViewInject(R.id.tv_money)
	private TextView tvMoney;
	// 广告随机领取范围
	@ViewInject(R.id.tv_random)
	private TextView tvRandom;
	// 广告投入酷币总额
	@ViewInject(R.id.tv_cobi_total)
	private TextView tvCobiTotal;
	// 广告每人可领取酷币数
	@ViewInject(R.id.tv_co_draw)
	private TextView tvCoDraw;
	// 广告剩余红包和酷币
	@ViewInject(R.id.tv_remain)
	private TextView tvRemain;
	private AdvertisementDetail advertisementDetail;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.aty_advertisement_detail);
		ViewUtils.inject(this);
		initUI();
		intiData();
		if (AppContext.getUserInformation().isLogin()) {
			if (adInfoId != null) {
				requestAdvisetisementDetail(AppContext.getUserInformation()
						.getAccess_token());
			}
		} else {
			goWebLoginActivity();
			finish();
		}
	}

	Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			if (advertisementDetail != null) {
				MyFormat.setBitmap(AdvertisementDetailAty.this, iv,
						advertisementDetail.getIMAGE_URL(), 0, 0);
				tvKind.setText(advertisementDetail.getAD_LOCATION());
				tvCobiTotal.setText("CO币总额"
						+ advertisementDetail.getCO_AMOUNT() + "个");
				tvCoDraw.setText("每人可领" + advertisementDetail.getCO_MIN() + "个");
				tvMoney.setText("红包总金额" + advertisementDetail.getMONEY() + ",");
				tvRandom.setText("随机领取范围" + advertisementDetail.getMONEY_MIN()
						+ "-" + advertisementDetail.getMONEY_MAX() + "元,");
				tvTime.setText(advertisementDetail.getCREATE_DATE() + "");
				tvRemain.setText("剩余现金"
						+ (advertisementDetail.getMONEY().doubleValue() - advertisementDetail
								.getRECEIVED_MONEY().doubleValue())
						+ "元,"
						+ "剩余酷币"
						+ (advertisementDetail.getCO_AMOUNT().intValue() - advertisementDetail
								.getRECEIVED_CO().intValue()) + "个");
			}
			autoLoading.hideAll();
		};
	};

	/**
	 * 初始化数据
	 */
	private void intiData() {
		bundle = getIntent().getExtras();
		if (bundle != null) {
			adInfoId = bundle.getString("adInfoId");
		}
	}

	private void initUI() {
		ScreenManager.getScreenManager().pushActivity(this);
		initAutoLoading(lyLoad);
		autoLoading.setClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				requestAdvisetisementDetail(AppContext.getUserInformation()
						.getAccess_token());
			}
		});
	}

	@OnClick({ R.id.iv_back, R.id.tv_start })
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.iv_back:
			finish();
			break;
		case R.id.tv_start:
			if (AppContext.getUserInformation().isLogin()) {
				Intent intent = new Intent(this, AdvertisementCommentAty.class);
				startActivity(intent);
			} else {
				goWebLoginActivity();
				finish();
			}
			break;
		default:
			break;
		}
	}

	/**
	 * 发起查询广告详情请求
	 */
	private void requestAdvisetisementDetail(String access_token) {
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token", access_token);
		params.addQueryStringParameter("adInfoId", adInfoId);
		params.addHeader("X-Requested-With", "XMLHttpRequest");
		Log.i("tag", adInfoId + "--------进来了--adInfoId------");
		AppContext.getHtmlUitls().xUtilsm(this, HttpMethod.POST,
				"m/ad/getAdInfo", params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub
						// autoLoading.showExceptionLayout();
						autoLoading.showExceptionLayout();
						Log.i("tag", msg + "--------进来了--msg------");
					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						ParseJson parseJson = ParseJson.getParseJson();
						Map<String, Object> map = parseJson
								.parseIsSuccess(json);
						Log.i("tag",
								"--------进来了requestAdvisetisementDetail------");
						Log.i("tag", (Boolean) map.get("isSuccess")
								+ "--------------isSuccess-----" + json);
						if ((Boolean) map.get("isSuccess")) {
							advertisementDetail = ParseJson.getParseJson()
									.parseAdvertisementDetail(json);
							handler.sendEmptyMessage(1);
						} else if (map.get("errorCode").equals("NOT_LOGIN")) {
							setRefreshListtener(new Refresh() {
								@Override
								public void refreshRequst(String access_token) {
									// TODO Auto-generated method stub
									Log.i("tag", "------监听里-------");
									requestAdvisetisementDetail(access_token);
								}
							});
							RefeshToken();
						}
					}
				});
	}
}
