package com.llg.privateproject.fragment;

import java.sql.Date;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.TextView;

import com.bjg.lcc.privateproject.R;
import com.lidroid.xutils.ViewUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.lidroid.xutils.view.annotation.ViewInject;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.actvity.PhoneActivity;
import com.llg.privateproject.actvity.WebLoginActivity;
import com.llg.privateproject.entities.UserInformation;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.llg.privateproject.utils.StringUtils;

/**
 * 打电话----余额
 * 
 * @author Administrator
 *
 */
public class FragmentPhoneMoney extends BaseFragment {
	private PhoneActivity context;
	/** 账号*/
	@ViewInject(R.id.tel)
	private TextView tel;
	/** 话费余额*/
	@ViewInject(R.id.money)
	private TextView money;
	/** 刷新*/
	@ViewInject(R.id.tv_notify)
	private TextView tvNotify;
	private TextView tvNet;
	/** 有效期*/
	@ViewInject(R.id.lastdate)
	private TextView lastdate;
	private String account = "";
	private String mymoney = "";
	private String lasttime = "";
	Handler handler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 1:

				tel.setText(account);
				money.setText(mymoney);
				lastdate.setText(lasttime);
				break;

			default:
				break;
			}
		};
	};

	@Override
	public String getFragmentName() {
		// TODO Auto-generated method stub
		return "FragmentPhoneMoney";
	}

	@Override
	public void onAttach(Activity activity) {
		// TODO Auto-generated method stub
		super.onAttach(activity);
		context = (PhoneActivity) activity;
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		View v = inflater.inflate(R.layout.phonemoney, null);
		tvNet = (TextView) v.findViewById(R.id.tv_net);
		ViewUtils.inject(this, v);
		// if (TextUtils.isEmpty(getSharePrefence().getString("phone", null))) {
		// toast("余额查询失败");
		// return v;
		// }
		searchBalance(UserInformation.getAccess_token());
		registerReceiver();
		tvNet.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent intent = new Intent("android.settings.WIRELESS_SETTINGS");
				startActivity(intent);
			}
		});
		tvNotify.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				searchBalance(UserInformation.getAccess_token());
			}
		});
		return v;
	}

	@Override
	protected void doAction1() {
		// TODO Auto-generated method stub
		super.doAction1();
		tvNet.setVisibility(View.VISIBLE);
	}

	@Override
	protected void doAction2() {
		// TODO Auto-generated method stub
		super.doAction1();
		tvNet.setVisibility(View.GONE);
	}

	private void searchBalance(String access_token) {
		if (!appContext.isNetworkConnected()) {
			customProgressSmall.dismiss();
			toast("网络未连接");
			return;
		}
		customProgressSmall.setMessage("正在查询中");
		customProgressSmall.show();
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token", access_token);
		params.addQueryStringParameter("tel",
				getSharePrefence().getString("phone", null));

		AppContext.getHtmlUitls().xUtils(getActivity(), HttpMethod.POST,
				"tel/getinfo", params,

				new HttpCallback() {

			@Override
			public void onError(String msg) {
				// TODO Auto-generated method stub
				Log.i("tag", msg);
				customProgressSmall.dismiss();
				if (msg.equals("401")) {
					startActivity(new Intent(getActivity(),
							WebLoginActivity.class));
				} else {
					toast("余额查询失败");
				}
			}

			@Override
			public void onBack(JSONObject json) {
				// TODO Auto-generated method stub
				Log.i("tag", json.toString());
				try {
					if (json.getBoolean("success")) {
						customProgressSmall.dismiss();
						JSONArray infoCustomers = json.getJSONObject(
								"obj").getJSONArray("infoCustomers");
						if (infoCustomers.length() > 0) {
							JSONObject obj = infoCustomers
									.getJSONObject(0);
							account = obj.getString("account");
							mymoney = StringUtils.dealMoney(Double.parseDouble(obj.getString("money")));
//							mymoney = obj.getString("money");
							lasttime = ""
									+ new Date(obj.getLong("validTime"));// .getInt("validTime")));
							handler.sendEmptyMessage(1);
						}
					} else {
						if (json.get("errorCode").equals("NOT_LOGIN")) {
							// Log.i("tag", json.toString()
							// + "------监听上一句--------");
							setRefreshListtener(new Refresh() {
								@Override
								public void refreshRequst(
										String access_token) {
									// TODO Auto-generated method
									// stub
									Log.i("tag", "------监听里-------");
									searchBalance(UserInformation
											.getAccess_token());
								}
							});
							RefeshToken();
						} else {
							customProgressSmall.dismiss();
							toast("查询余额失败");
						}
					}
				} catch (JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});
	}

}
