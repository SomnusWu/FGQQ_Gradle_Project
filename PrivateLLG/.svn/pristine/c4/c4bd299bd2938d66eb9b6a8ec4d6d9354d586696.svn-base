package com.llg.privateproject.adapters;

import java.util.List;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import com.lidroid.xutils.BitmapUtils;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.llg.help.MyFormat;
import com.llg.privateproject.AppContext;
import com.llg.privateproject.actvity.ProductDetailActivity;
import com.llg.privateproject.actvity.WebLoginActivity;
import com.llg.privateproject.html.AndroidCallBack.HttpCallback;
import com.llg.privateproject.utils.CommonUtils;
import com.bjg.lcc.privateproject.R;

import android.content.Context;
import android.content.Intent;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import android.widget.Toast;

/**
 * 店铺商品显示适配器 yh 2015.07.29
 * 
 * */
public class ShopProductHotAdapter extends BaseAdapter {
	Context context;
	List<Map<String, Object>> list;
	boolean isAll = false;

	/**
	 * 店铺商品显示适配器 isAll：false 设置描述单行显示，true 设置描述多行显示
	 * 
	 * */
	public ShopProductHotAdapter(Context context,
			List<Map<String, Object>> list, boolean isAll) {
		this.context = context;
		this.list = list;
		this.isAll = isAll;
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return list == null ? 0 : list.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public View getView(final int position, View v, ViewGroup parent) {
		// TODO Auto-generated method stub
		ViewHolder holder = null;
		final Map<String, Object> map = list.get(position);
		if (v == null) {
			holder = new ViewHolder();
			v = View.inflate(context, R.layout.shop_product_list_item, null);
			holder.pic = (ImageView) v.findViewById(R.id.pic);
			holder.guanzhu = (ImageView) v.findViewById(R.id.guanzhu);
			holder.price = (TextView) v.findViewById(R.id.price);
			holder.dsc = (TextView) v.findViewById(R.id.dsc);
			if (isAll) {
				holder.dsc.setSingleLine(false);
			} else {

				holder.dsc.setSingleLine(true);
			}
			v.setTag(holder);
		} else {
			holder = (ViewHolder) v.getTag();
		}

		holder.pic.setLayoutParams(new LayoutParams(
				AppContext.getScreenWidth(), AppContext.getScreenWidth() / 2));
		map.get("productId");
		map.get("pic");
		map.get("price");
		// Log.d("my","dsc"+map.get("price").toString());
		holder.dsc.setText(map.get("comodityName").toString());
		holder.price.setText("￥"
				+ MyFormat.getPriceFormat(map.get("price").toString()));
		MyFormat.setBitmap(context, holder.pic, map.get("pic").toString(),
				AppContext.getScreenWidth(), AppContext.getScreenWidth() / 2);
		holder.guanzhu.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				attion( map.get("prodspecId").toString());
			}
		});
		v.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				String prodspecId = map.get("prodspecId").toString();

				// Intent intent= new Intent(context,
				// ProductDetailActivity.class);
				Intent intent = new Intent();
				intent.putExtra("prodspecId", prodspecId);
				intent.putExtra("img", map.get("pic").toString());
				
				intent.setAction("com.my.test.yh");

				context.startActivity(intent);

			}
		});
		return v;
	}

	class ViewHolder {
		ImageView pic;
		TextView dsc;
		TextView price;
		ImageView guanzhu;
	}
	/*** 关注 */
	private void attion(String prodspecId ) {
		if (!AppContext.isLogin) {
			Toast.makeText(context, "关注前请先登录", Toast.LENGTH_SHORT).show();
			context.startActivity(new Intent(context, WebLoginActivity.class));
			return;
		}
		RequestParams params = new RequestParams();
		params.addQueryStringParameter("access_token", AppContext
				.getUserInformation().getAccess_token());
		params.addQueryStringParameter("type", String.valueOf(1));
		params.addQueryStringParameter("objectId", prodspecId);// objectId
		AppContext.getHtmlUitls().xUtilsm(context, HttpMethod.POST,
				"m/attention/addAttention", params, new HttpCallback() {

					@Override
					public void onError(String msg) {
						// TODO Auto-generated method stub

					}

					@Override
					public void onBack(JSONObject json) {
						// TODO Auto-generated method stub
						try {
							if (json.getBoolean("success")) {
								Toast.makeText(context,
										"已经关注", Toast.LENGTH_SHORT).show();
							} else {
								Toast.makeText(context,
										json.getString("msg"),
										Toast.LENGTH_SHORT).show();
							}
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
					}

				});
	}
}
